package com.kotlin

/*
* 코틀린에선 명시적으로 ?가 붙어야만 널이 될 수 있다. 널을 가질 수 있는 자바의 reference type인 Integer등과 같은개념이지만
* reference type이 아니고 값에 대해 수행할 수 있는 연산의 종류가 제한된다.
* 즉, 컴파일 단계에서 널이 될 수 있는 타입에 대해 강력하게 검사함으로써 런타임에서의 NPE 가능성을 최대한 줄인다.
 */


/*
* ?: : elvis 연산자
* as? : 안전한 캐스팅
* !! : 널이 아님을 보장
* let 함수 : 널이 될 수 있는 타입을 널이 될 수 없는 타입으로 바꿔 람다에 전달
* 타입 파라미터 : 널이 될 수 있는 ?를 붙여야 한다는 규칙의 유일한 예외
 */

fun main() {

}

